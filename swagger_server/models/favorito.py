# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Favorito(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_favorito: int=None, id_perfil: int=None, id_contenido: int=None, fecha_agregado: datetime=None):  # noqa: E501
        """Favorito - a model defined in Swagger

        :param id_favorito: The id_favorito of this Favorito.  # noqa: E501
        :type id_favorito: int
        :param id_perfil: The id_perfil of this Favorito.  # noqa: E501
        :type id_perfil: int
        :param id_contenido: The id_contenido of this Favorito.  # noqa: E501
        :type id_contenido: int
        :param fecha_agregado: The fecha_agregado of this Favorito.  # noqa: E501
        :type fecha_agregado: datetime
        """
        self.swagger_types = {
            'id_favorito': int,
            'id_perfil': int,
            'id_contenido': int,
            'fecha_agregado': datetime
        }

        self.attribute_map = {
            'id_favorito': 'id_favorito',
            'id_perfil': 'id_perfil',
            'id_contenido': 'id_contenido',
            'fecha_agregado': 'fecha_agregado'
        }
        self._id_favorito = id_favorito
        self._id_perfil = id_perfil
        self._id_contenido = id_contenido
        self._fecha_agregado = fecha_agregado

    @classmethod
    def from_dict(cls, dikt) -> 'Favorito':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Favorito of this Favorito.  # noqa: E501
        :rtype: Favorito
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_favorito(self) -> int:
        """Gets the id_favorito of this Favorito.

        ID del favorito  # noqa: E501

        :return: The id_favorito of this Favorito.
        :rtype: int
        """
        return self._id_favorito

    @id_favorito.setter
    def id_favorito(self, id_favorito: int):
        """Sets the id_favorito of this Favorito.

        ID del favorito  # noqa: E501

        :param id_favorito: The id_favorito of this Favorito.
        :type id_favorito: int
        """

        self._id_favorito = id_favorito

    @property
    def id_perfil(self) -> int:
        """Gets the id_perfil of this Favorito.

        ID del perfil del usuario  # noqa: E501

        :return: The id_perfil of this Favorito.
        :rtype: int
        """
        return self._id_perfil

    @id_perfil.setter
    def id_perfil(self, id_perfil: int):
        """Sets the id_perfil of this Favorito.

        ID del perfil del usuario  # noqa: E501

        :param id_perfil: The id_perfil of this Favorito.
        :type id_perfil: int
        """
        if id_perfil is None:
            raise ValueError("Invalid value for `id_perfil`, must not be `None`")  # noqa: E501

        self._id_perfil = id_perfil

    @property
    def id_contenido(self) -> int:
        """Gets the id_contenido of this Favorito.

        ID del contenido favorito  # noqa: E501

        :return: The id_contenido of this Favorito.
        :rtype: int
        """
        return self._id_contenido

    @id_contenido.setter
    def id_contenido(self, id_contenido: int):
        """Sets the id_contenido of this Favorito.

        ID del contenido favorito  # noqa: E501

        :param id_contenido: The id_contenido of this Favorito.
        :type id_contenido: int
        """
        if id_contenido is None:
            raise ValueError("Invalid value for `id_contenido`, must not be `None`")  # noqa: E501

        self._id_contenido = id_contenido

    @property
    def fecha_agregado(self) -> datetime:
        """Gets the fecha_agregado of this Favorito.

        Fecha en que se agregó a favoritos  # noqa: E501

        :return: The fecha_agregado of this Favorito.
        :rtype: datetime
        """
        return self._fecha_agregado

    @fecha_agregado.setter
    def fecha_agregado(self, fecha_agregado: datetime):
        """Sets the fecha_agregado of this Favorito.

        Fecha en que se agregó a favoritos  # noqa: E501

        :param fecha_agregado: The fecha_agregado of this Favorito.
        :type fecha_agregado: datetime
        """
        if fecha_agregado is None:
            raise ValueError("Invalid value for `fecha_agregado`, must not be `None`")  # noqa: E501

        self._fecha_agregado = fecha_agregado
